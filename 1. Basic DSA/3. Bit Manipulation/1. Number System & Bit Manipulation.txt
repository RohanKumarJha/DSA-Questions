-----------------------------------------Basics--------------------------------------------
Find number is odd & even?
Find ith bit of a number.
Set ith bit to 1.
Reset ith bit.
Position of Rightmost set bit.
Which element occurs only once in array?
Find number of bits in the digit.(Formula Also)
Find it's power of 2 or not.
Given a number n, find the number of set bits in it.
Find XOR of nos from 0 to a.
XOR of all nos between a & b.
Every element occurs thrice, which element occur once.***
-----------------------------------------Solutions-----------------------------------------
// 1st Question
class OddEven {
    public static void main(String[] args) {
        int num = -47;
        if((num&1) == 1) System.out.println("Number is odd");
        else System.out.println("Number is even");
    }
}

// 2nd Question
class FindIthBit {
    public static void main(String[] args) {
        int num = 39;
        int ithPos = 2;
        if(((num>>ithPos)&1)==1) System.out.println("The ith element is "+1);
        else System.out.println("The ith element is "+0);
    }
}

// 3rd Question
class setIthBitToOne {
    public static void main(String[] args) {
        int num = 43;
        int pos = 3;
        System.out.println(((1<<pos)|num));
    }
}

// 4th Question
class ResetIthBit {
    public static void main(String[] args) {
        int num = 43;
        int pos = 2;
        System.out.println(((~(1<<pos))&num));
    }
}

// 5th Question
class PosRightSetBit {
    public static void main(String[] args) {
        int num = 32, i=0;
        while(num>0) {
            if((num&1)==1) break;
            i++;
            num>>=1;
        } System.out.println("Position of rightmost SetBit is in "+i+" Position");
    }
}

// 6th Question
class OccurOnce {
    public static void main(String[] args) {
        int[] arr = {1,3,5,2,3,1,5};
        int size = arr.length, ans = 0;
        for(int i=0; i<size; i++) {
            ans ^= arr[i];
        }
        System.out.println(ans);
    }
}

// 7th Question
class NoOfBits {
    public static void main(String[] args) {
        int num = 43, count=0;
        while(num>0) {
            count++;
            num>>=1;
        } System.out.println(count);
    }
}

// 8th Question
class PowerOfTwo {
    public static void main(String[] args) {
        int count = 0, num=26;
        while(num>0) {
            if((num&1)==1) count++;
            if(count>1) break;
            num>>=1;
        } 
        if(count==1) System.out.println("Power by 2");
        else System.out.println("Not power of 2");
    }
}

// 9th Question
class NoOfSetBits {
    public static void main(String[] args) {
        int num=31, count=0;
        while(num>0) {
            if((num&1)==1) count++;
            num>>=1;
        } System.out.println(count);
    }
}

// 10th Question
class xor0ToA {
    public static void main(String[] args) {
        int num = 24, ans=0;
        // BASIC WAY
        for(int i=1; i<=num; i++) {
            ans ^= i;
        } System.out.println(ans);
        
        // FORMULA USED
        if(num%4==0) System.out.println(num);
        else if(num%4==1) System.out.println(1);
        else if(num%4==2) System.out.println(num+1);
        else System.out.println(0);
    }
}

// 11th Question
class xorAToB {
    public static int XOR(int num) {
        if(num%4==0) return 1;
        else if(num%4==1) return num+1;
        else if(num%4==2) return 0;
        return num;
    }
    public static void main(String[] args) {
        int num1=5, num2=11;
        System.out.println(XOR(num2)^XOR(num1-1));
    }
}